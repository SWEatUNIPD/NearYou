services:
  kafka:
    image: apache/kafka:latest
    ports:
      - 9094:9094
    environment:
      KAFKA_NODE_ID: 0
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 0@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./data/kui/config.yaml:/etc/kafkaui/dynamic_config.yaml

  postgis:
    image: postgis/postgis
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminadminadmin
      - POSTGRES_DB=admin
    volumes:
      - ./create.sql:/docker-entrypoint-initdb.d/create.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "admin", "-U", "admin"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana/grafana.db:/var/lib/grafana/grafana.db

  jobmanager:
    image: flink:1.20.1-scala_2.12-java17
    depends_on:
      - kafka
      - postgis:
          condition: service_healthy
    ports:
      - 8081:8081
    command: standalone-job --job-classname io.github.sweatunipd.DataStreamJob
    volumes:
      - ./job/target/NearYou-1.0.jar:/opt/flink/usrlib/NearYou-1.0.jar
    environment:
      - |
        FLINK_PROPERTIES=
        kafka.bootstrap.server: kafka:9092
        kafka.input.topic: gps-data
        kafka.output.topic: adv-data
        postgres.jdbc.connection.url: jdbc:postgresql://postgis:5432/admin
        postgres.username: admin
        postgres.password: adminadminadmin
        langchain.openai.model.name: gpt-4o-mini
        langchain.openai.api.key: demo
        jobmanager.rpc.address: jobmanager
        parallelism.default: 2 

  taskmanager:
    image: flink:1.20.1-scala_2.12-java17
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    volumes:
      - ./job/target/NearYou-1.0.jar:/opt/flink/usrlib/NearYou-1.0.jar
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 2